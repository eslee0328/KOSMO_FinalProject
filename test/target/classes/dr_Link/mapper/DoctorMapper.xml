<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="doctor">
   
   	<resultMap type="departmentDTO" id="departmentMap">
	<id property="dep_num" column="dep_num" javaType="int" />
		<result column="dep_name" property="dep_name"/>
	</resultMap>
  
  	
	<resultMap type="doctorDTO" id="doctorMap">
		<id property="doctor_num" column="doctor_num" javaType="int" />
		<result column="d_id" property="d_id" />
		<result column="d_pwd" property="d_pwd" />
		<result column="d_name" property="d_name" />
		<result column="dep_num" property="dep_num" />
		<result column="d_jumin_num" property="d_jumin_num" />
		<result column="d_phone_num" property="d_phone_num" />
		<result column="d_gender" property="d_gender" />
		<result column="d_zipcode" property="d_zipcode" />
		<result column="d_address1" property="d_address1" />
		<result column="d_address2" property="d_address2" />
		<result column="d_email" property="d_email" />
		<result column="d_licence" property="d_licence" />
		<result column="d_licence_num" property="d_licence_num" />
		<result column="d_regdate" property="d_regdate" />
		<result column="d_content" property="d_content" />
		<result column="d_photo" property="d_photo" />
		<result column="d_graduation" property="d_graduation" />
		<result column="d_career" property="d_career" />
		<result column="d_field" property="d_field" />
		<result column="d_retire_date" property="d_retire_date" />
		<collection property="departmentDTO" resultMap="departmentMap"/>
		<collection property="doc_ReviewDTO" resultMap="reviewMap"/>
	</resultMap>

	<resultMap type="patientDTO" id="patientMap">
		<id property="patient_num" column="patient_num" javaType="int" />
		<result column="p_id" property="p_id" />
		<result column="p_pwd" property="p_pwd" />
		<result column="p_name" property="p_name" />
		<result column="p_jumin_num" property="p_jumin_num" />
		<result column="p_phone_num" property="p_phone_num" />
		<result column="bloodtype" property="bloodtype" />
		<result column="allergy" property="allergy" />
		<result column="p_email" property="p_email" />
		<result column="height" property="height" />
		<result column="weight" property="weight" />
		<result column="p_birth" property="p_birth" />
		<result column="p_photo" property="p_photo" />
		<result column="p_gender" property="p_gender" />
		<result column="p_zipcode" property="p_zipcode" />
		<result column="p_address1" property="p_address1" />
		<result column="p_address2" property="p_address2" />
		<result column="p_phone" property="p_phone" />
		<result column="p_regdate" property="p_regdate" />
	</resultMap>
 	<resultMap type="treatmentRecordDTO" id="treatmentRecordPListMap">
  	 	<id property="treatment_num" column="treatment_num" javaType="int" />
		<result column="patient_num" property="patient_num"/>
		<result column="doctor_num" property="doctor_num"/>
		<result column="dep_num" property="dep_num"/>
		<result column="monitoring_time" property="monitoring_time"/>
		<result column="start_treatment_time" property="start_treatment_time"/>
		<collection property="doctorDTO" resultMap="doctorMap"/>
		<collection property="patientDTO" resultMap="patientMap"/>
		<collection property="departmentDTO" resultMap="departmentMap"/>
	</resultMap>
	<resultMap type="aiRecordDTO" id="aiRecordMap">
		<id property="patient_num" column="patient_num" javaType="int" />
		<result column="doctor_num" property="doctor_num"/>
		<result column="dep_num" property="dep_num"/>
		<result column="ai_symptom" property="ai_symptom"/>
		<result column="use_time" property="use_time"/>
		<result column="symptom_photo" property="symptom_photo"/>
	</resultMap>
  
  <!-- 김다유 : 의사 프로필 업데이트 d_photo=#{d_photo}, -->
	<update id="doctor_profile_settings" parameterType="doctorDTO">
		update dl_doctor set d_email = #{d_email} , 
		d_phone_num = #{d_phone_num}, d_content=#{d_content}, d_field=#{d_field}, 
		d_graduation=#{d_graduation}, 
		d_career=#{d_career}, d_photo=#{d_photo}, d_licence=#{d_licence}, 
		d_licence_num=#{d_licence_num} where doctor_num = #{doctor_num}
	</update>
   
	<!-- 김다유 : 의사 정보 -->
	<select id="doctor_profile" parameterType="int" resultMap="doctorMap">
		SELECT * FROM dl_doctor a JOIN department b ON a.dep_num = b.dep_num where doctor_num=#{doctor_num}
	</select>
  
	<!-- 김다유 : 환자 리스트 -->
	<select id="my_patients_list" parameterType="int" resultMap="treatmentRecordPListMap">
	     select * from treatment_record a 
	     join dl_user b on a.patient_num=b.patient_num 
	     join dl_doctor c on a.doctor_num=c.doctor_num 
	     join department d on a.dep_num=d.dep_num 
	     where a.doctor_num=#{doctor_num}
	     order by treatment_num desc
	</select>
   
   
   
 	<!-- 김성민 -->
 	<!-- 로그인 -->
	<select id="loginchk" parameterType="doctorDTO" resultMap="doctorMap">
	select * from dl_doctor a, department b where a.dep_num = b.dep_num and a.d_id=#{d_id} and a.d_pwd=#{d_pwd}
	</select>
	
 	<!-- 회원가입 -->
	<insert id="add" parameterType="doctorDTO">
		insert into dl_doctor(doctor_num, d_id, d_pwd, d_name, d_gender, d_jumin_num, d_phone_num, d_zipcode, d_address1, d_address2, d_email, d_photo, d_graduation, d_licence, d_career, d_licence_num, dep_num) values(doctor_num.nextval,#{d_id}, #{d_pwd}, #{d_name}, #{d_gender}, #{d_jumin_num}, #{d_phone_num}, #{d_zipcode}, #{d_address1}, #{d_address2}, #{d_email}, #{d_photo}, #{d_graduation}, #{d_licence}, #{d_career}, #{d_licence_num}, #{dep_num})
	</insert>

	<!-- 아이디 중복 검사 -->
	<select id="idCheck" parameterType="String" resultType="int">
		select count(*) from dl_doctor where d_id = #{d_id}
	</select>

	<!-- 회원가입 인증번호 검사 -->
	<select id="verifyCheck" parameterType="String" resultType="int">
		select count(*) from doctor_verify where d_verifynum = #{d_verifynum}
	</select>

	<!-- 아이디 중복 검사 -->
	<select id="check_id" parameterType="String" resultType="int">
		select count(*) from dl_doctor where d_id = #{d_id}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="find_id" parameterType="String" resultType="String">
		select d_id from dl_doctor where d_email = #{email}
	</select>

	<!-- 비밀번호 변경(비번찾기용) -->
	<update id="update_pw" parameterType="doctorDTO">
		update dl_doctor set d_pwd = #{d_pwd} where d_id = #{d_id}
	</update>
	
	<!-- 비밀번호 변경 -->
	<update id="update_doctorpwd" parameterType="doctorDTO">
		update dl_doctor set d_pwd = #{d_pwd} where d_id = #{d_id}
	</update>
	
	<!-- 비밀번호 변경 전 확인용 -->
  	<select id="pwdCheck" parameterType="doctorDTO" resultType="int">
		select count(*) from dl_doctor where d_id = #{d_id} and d_pwd = #{d_pwd}
	</select>

	<!-- 이메일 매칭용 -->
	<select id="emailCheck" parameterType="String" resultType="doctorDTO">
		select * from dl_doctor where d_id = #{id}
	</select>

	<!-- 이메일 중복 검사 -->
	<select id="doctoremailCheck" parameterType="String" resultType="int">
		select
		count(*) from dl_doctor where d_email = #{d_email}
	</select>
	
	<!-- 회원탈퇴 -->
	<update id="deleteDoctor" parameterType="int">
		update dl_doctor set d_retire_date = sysdate where doctor_num = #{doctor_num}
	</update>

	<select id="getDoctor" parameterType="int" resultType="doctorDTO">
		select * from dl_doctor where doctor_num=#{doctor_num}
	</select>

  	<!-- search -->
  	 <!-- 의료진소개 페이징처리 및 필터링 -->
	  <select id="list" resultType="doctorDTO" parameterType="PageDTO">
	   select * from (
	   select rownum r_num, a.* from 
	   (
	   select * from dl_doctor 
	   <if test="searchType != null">
	   <where>
	   	<choose>
	   		<when test="searchType == 1">
	   			 d_gender = #{searchValue}
	   		</when>
	   		<when test="searchType == 2">
	   			dep_num = #{searchValue}
	   		</when>
	   	</choose>
	   </where>
	   </if>
	   
	   order by doctor_num desc
	   ) a
	   ) where r_num between #{start} and #{end}
	</select>
	<select id="totalCount" resultType="int" parameterType="PageDTO">
	  		select count(*) cnt from dl_doctor
	  		<if test="searchType != null">
	   <where>
	   	<choose>
	   		<when test="searchType == 1">
	   			 d_gender = #{searchValue}
	   		</when>
	   		<when test="searchType == 2">
	   			dep_num = #{searchValue}
	   			<!--  d_name like '%'|| #{searchValue} ||'%'-->
	   		</when>
	   	</choose>
	   </where>
	   </if>
	 </select>
	 
	 
	<!-- search 파라미터 값 있을 때 -->  
	<select id="searchList" resultMap="doctorMap">
		select a.*, b.*, c.*, nvl(b.rating, 0) as review_rating from
		dl_doctor a,
		(select doctor_num, round(avg(review_rating) ,0) as rating
		from doc_review group by doctor_num) b,
		department c  
		<where> 
		a.DEP_NUM=c.DEP_NUM and
		a.DOCTOR_NUM=b.doctor_num(+)
		<if test="d_genderList != null">
		and d_gender in
		<foreach collection="d_genderList" item="item" 
		index="index" separator="," open="(" close=")">
		#{item}
		</foreach>
		</if>
		<if test="dep_numList != null">
		and a.dep_num in
		<foreach collection="dep_numList" item="item"
		index="index" separator="," open="(" close=")">
		#{item}
		</foreach>
		</if>
		</where>
		order by D_NAME
	</select>
	
	<resultMap type="doc_ReviewDTO" id="reviewMap">
		<result column="review_rating" property="review_rating"/>		
	</resultMap>
   
   
  <!-- resultMap -->
   <resultMap type="patientDTO" id="patientResult">
      <id property="patient_num" column="patient_num" javaType="int"/>
      <result property="p_name" column="p_name"/>
      <result property="bloodtype" column="bloodtype"/>
      <result property="allergy" column="allergy"/>
      <result property="p_photo" column="p_photo"/>
      <result property="p_gender" column="p_gender"/>
      <result property="p_jumin_num" column="p_jumin_num"/>
      <result property="p_zipcode" column="p_zipcode"/>
      <result property="p_address1" column="p_address1"/>
      <result property="p_address2" column="p_address2"/>
      <result property="profileAddress" column="profileAddress"/>
      <result property="p_email" column="p_email"/>
      <result property="p_phone_num" column="p_phone_num"/>
   </resultMap>
   
   <resultMap type="doctorDTO" id="doctorResult">
      <id property="doctor_num" column="doctor_num" javaType="int"/>
      <result property="d_name" column="d_name"/>
      <result property="d_jumin_num" column="d_jumin_num"/>
      <result property="d_phone_num" column="d_phone_num"/>
      <result property="d_email" column="d_email"/>
      <result property="d_gender" column="d_gender"/>
   </resultMap>
   
   <resultMap type="treatmentRecordDTO" id="treatResult">
      <id property="treatment_num" column="treatment_num" javaType="int"/>
      <result property="patient_num" column="patient_num"/>
      <result property="doctor_num" column="doctor_num"/>
      <result property="appointment_num" column="appointment_num"/>
      <result property="monitoring_time" column="monitoring_time"/>
      <result property="start_treatment_time" column="start_treatment_time"/>
   </resultMap>
   
   <resultMap type="appointmentDTO" id="d_dash_board">
      <id property="appointment_num" column="appointment_num" javaType="int"/>
      <result property="appointment_date" column="appointment_date"/>
      <result property="appointment_time" column="appointment_time"/>
      <result property="patient_num" column="patient_num"/>
      <result property="doctor_num" column="doctor_num"/>
      <result property="dep_num" column="dep_num"/>
      <result property="reg_time" column="reg_time"/>
      <result property="total_cnt" column="total_cnt"/>
      <collection property="patients" javaType="java.util.List" resultMap="patientResult" ofType="patientDTO"/>
   </resultMap>
  <!-- resultMap 끝-->
  
  <!-- doctor_dashboard 로 갈 때 필요한 데이터들 -->
  <select id="dash_total_cnt" parameterType="int" resultType="appointmentDTO">
  
    select doctor_num,
( select count(*) from appointment where doctor_num = #{doctor_num} and appointment_date = to_char(sysdate, 'YYYY-MM-DD') ) today_cnt,
( select count(*) from appointment where doctor_num = #{doctor_num} and appointment_date = to_char(sysdate+1, 'YYYY-MM-DD'))  tomo_cnt, 
( select count(*) from appointment where doctor_num = #{doctor_num} ) total_cnt 
from appointment where doctor_num = #{doctor_num} group by doctor_num

  </select>
  
  <select id="getAP_num" resultType="treatmentRecordDTO">
   select appointment_num from treatment_record where appointment_num in 
  ( select appointment_num from appointment where appointment_date = to_char(sysdate, 'YYYY-MM-DD') )
  </select>
  
<select id="get_dashList" parameterType="int" resultMap="d_dash_board">

select  p.patient_num patient_num, p.p_photo p_photo, p.p_name p_name, p.p_address1 p_address1, p.p_address2 p_address2, p.p_email p_email, p.allergy allergy,
        p.p_phone_num p_phone_num, p.p_gender p_gender, am.appointment_date appointment_date, am.appointment_time appointment_time, am.appointment_num appointment_num
from dl_user p, appointment am
where p.patient_num = am.patient_num and am.doctor_num = #{doctor_num} and
<![CDATA[
am.appointment_date >= to_char(sysdate, 'YYYY-MM-DD') and 
am.appointment_date <= to_char(sysdate+1, 'YYYY-MM-DD')
]]>   
order by am.appointment_date

</select>   

<resultMap type="appointmentDTO" id="apListResult">
   <id property="doctor_num" column="doctor_num" javaType="int"/>
   <result property="appointment_time" column="appointment_time"/>
   <result property="reg_time" column="reg_time"/>
   
   <collection property="patients" javaType="java.util.List" resultMap="patientResult" ofType="patientDTO"/>
   <collection property="departments" javaType="java.util.List" resultMap="departmentMap" ofType="departmentDTO"/>
</resultMap> 

<select id="getApList" parameterType="int" resultMap="d_dash_board">

select rownum, a.* from (
select p.p_name p_name, p.p_photo p_photo, p.p_address1 p_address1, p.p_address2 p_address2, p.p_email p_email, am.appointment_num appointment_num,
        p.p_phone_num p_phone_num, p.p_gender p_gender, am.appointment_date appointment_date,am.appointment_time appointment_time, 
( select count(*) from appointment where doctor_num = #{doctor_num} and appointment_date >= to_char(sysdate, 'YYYY-MM-DD') ) total_cnt
from dl_user p, appointment am
where p.patient_num = am.patient_num and am.doctor_num = #{doctor_num} and 
<![CDATA[
am.appointment_date >= to_char(sysdate, 'YYYY-MM-DD')
]]>
order by am.appointment_date ) a
where rownum between #{start} and #{end}

</select>    

<!-- <select id="getPatientNum" parameterType="int" resultType="java.util.list">
	select DISTINCT patient_num from ai_record where doctor_num = #{doctor_num}
</select>

<select id="getLastAiRecord" parameterType="int" resultType="aiRecordDTO">
	select rownum, a.* from (select * from ai_record where patient_num = #{patient_num} order by use_time) a where rownum=1;
</select> -->

  </mapper>